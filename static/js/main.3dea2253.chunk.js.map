{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","blankGrid","createGrid","useState","grid","setGrid","isMousePressed","setIsMousePressed","Math","floor","window","innerHeight","innerWidth","startingNode","setStartingNode","endingNode","setEndingNode","isMovingStart","setIsMovingStart","isMovingEnd","setIsMovingEnd","grids","i","row","j","push","col","isWall","isStart","isEnd","createNode","node","className","id","concat","style","width","height","border","display","justifyContent","alignItems","onMouseDown","newGrid","curNode","onMouseEnter","onMouseUp","backgroundColor","borderRadius","position","overflow","Button","variant","color","onClick","anime","targets","scale","value","easing","duration","background","delay","stagger","map","flexDirection","renderGrid","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3dea2253.chunk.js","sourcesContent":["import './App.css';\nimport anime from 'animejs/lib/anime.es.js';\nimport React, { useState, useEffect } from 'react';\nimport { Button } from '@material-ui/core'\n\nfunction App() {\n\n  const blankGrid = createGrid()\n  const [grid, setGrid] = useState(createGrid())\n  const [isMousePressed, setIsMousePressed] = useState(false)\n  const [startingNode, setStartingNode] = useState([Math.floor((window.innerHeight - 200) / 40), Math.floor(window.innerWidth / 80)])\n  const [endingNode, setEndingNode] = useState([Math.floor((window.innerHeight - 200) / 40), Math.floor(window.innerWidth * 3 / 80)])\n  const [isMovingStart, setIsMovingStart] = useState(false)\n  const [isMovingEnd, setIsMovingEnd] = useState(false)\n\n  function createGrid() {\n    var grids = []\n    for (var i = 0; i < Math.floor((window.innerHeight - 200) / 20); i++) {\n      var row = []\n      for (var j = 0; j < Math.floor(window.innerWidth / 20); j++) {\n        row.push({\n          row: i,\n          col: j,\n          isWall: false,\n          isStart: false,\n          isEnd: false\n        })\n      }\n      grids.push(row)\n    }\n    return grids\n  }\n\n  function renderGrid(grid) {\n    return (\n      <div>\n        {grid.map((row) => {\n          return (\n            <div style={{ display: 'flex', flexDirection: 'row' }}>\n              {row.map(node => {\n                return createNode(node)\n              })}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n\n  function createNode(node) {\n    return (\n      <div\n        className='node'\n        id={\"node\".concat(Math.floor(window.innerWidth / 20) * node.row + node.col)}\n        style={{ width: 18, height: 18, border: '1px solid #7DEDFF', display: 'flex', justifyContent: 'center', alignItems: 'center' }}\n        onMouseDown={() => {\n          if ((node.row === startingNode[0] && node.col === startingNode[1])) {\n            setIsMovingStart(true)\n            return\n          }\n          if ((node.row === endingNode[0] && node.col === endingNode[1])) {\n            setIsMovingEnd(true)\n            return\n          }\n          var newGrid = [...grid]\n          var curNode = newGrid[node.row][node.col]\n          curNode.isWall = !node.isWall\n          newGrid[node.row][node.col] = curNode\n          setGrid(newGrid)\n          setIsMousePressed(true)\n        }}\n        onMouseEnter={() => {\n          if (isMovingStart) {\n            if ((node.row === endingNode[0] && node.col === endingNode[1])) { return }\n            if (node.isWall) {\n              var newGrid = [...grid]\n              var curNode = newGrid[node.row][node.col]\n              curNode.isWall = !node.isWall\n              newGrid[node.row][node.col] = curNode\n              setGrid(newGrid)\n            }\n            setStartingNode([node.row, node.col])\n\n          }\n          if (isMovingEnd) {\n            if ((node.row === startingNode[0] && node.col === startingNode[1])) { return }\n            if (node.isWall) {\n              var newGrid = [...grid]\n              var curNode = newGrid[node.row][node.col]\n              curNode.isWall = !node.isWall\n              newGrid[node.row][node.col] = curNode\n              setGrid(newGrid)\n            }\n            setEndingNode([node.row, node.col])\n\n          }\n          if (isMousePressed) {\n            var newGrid = [...grid]\n            var curNode = newGrid[node.row][node.col]\n            curNode.isWall = !node.isWall\n            newGrid[node.row][node.col] = curNode\n            setGrid(newGrid)\n          }\n        }}\n        onMouseUp={() => {\n          if (isMovingStart) {\n            setIsMovingStart(false)\n          }\n          if (isMovingEnd) {\n            setIsMovingEnd(false)\n          }\n          if (isMousePressed) {\n            setIsMousePressed(false)\n          }\n        }}\n      >\n        {(node.isWall) ? (\n          <div style={{ width: 18, height: 18, backgroundColor: 'black' }} />\n        ) : (\n          <></>\n        )}\n        {(node.row === startingNode[0] && node.col === startingNode[1]) ? (\n          <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n            <div style={{ width: 18, height: 18, borderRadius: 18, backgroundColor: 'black' }} />\n            <div style={{ width: 12, height: 12, borderRadius: 12, backgroundColor: 'white', position: 'absolute' }} />\n          </div>\n        ) : (\n          <></>\n        )}\n        {(node.row === endingNode[0] && node.col === endingNode[1]) ? (\n          <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n            <div style={{ width: 18, height: 18, borderRadius: 18, backgroundColor: 'red' }} />\n            <div style={{ width: 12, height: 12, borderRadius: 12, backgroundColor: 'green', position: 'absolute' }} />\n          </div>\n        ) : (\n          <></>\n        )}\n      </div>\n    )\n  }\n\n  function start() {\n    anime({\n      targets: '.node',\n      scale: [\n        { value: 1.1, easing: 'easeOutSine', duration: 500 },\n        { value: 1, easing: 'easeInOutQuad', duration: 1200 }\n      ],\n      background: [\n        { value: '#0CECDD', easing: 'linear', duration: 500 },\n        { value: '#88FFF7', easing: 'linear', duration: 500 },\n      ],\n      borderRadius: [\n        { value: '20%', easing: 'linear', duration: 1000 },\n        { value: '0%', easing: 'linear', duration: 500 },\n      ],\n      delay: anime.stagger(200, { grid: [Math.floor(window.innerWidth / 20), Math.floor((window.innerHeight - 200) / 20)] }),\n    });\n  }\n\n  return (\n    <div style={{ height: window.innerHeight, overflow: 'hidden' }}>\n      <div style={{ height: 200, width: '100%', backgroundColor: 'teal' }}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          style={{ width: 100 }}\n          onClick={() => {\n            start()\n          }}\n        >\n          Start\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          style={{ width: 100 }}\n          onClick={() => {\n            setGrid(blankGrid)\n            setStartingNode([Math.floor((window.innerHeight - 200) / 40), Math.floor(window.innerWidth / 80)])\n            setEndingNode([Math.floor((window.innerHeight - 200) / 40), Math.floor(window.innerWidth * 3 / 80)])\n          }}\n        >\n          Reset\n        </Button>\n      </div>\n      <div>\n        {renderGrid(grid)}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}