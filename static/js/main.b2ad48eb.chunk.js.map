{"version":3,"sources":["pathFindingFunctions.js","App.js","reportWebVitals.js","index.js"],"names":["getNeighbours","curNode","grid","node","neighbour","row","col","isWall","push","length","animateSearch","time","setTimeout","anime","targets","document","getElementById","concat","Math","floor","window","innerWidth","scale","value","easing","duration","background","borderRadius","animatePath","App","blankGrid","createGrid","useState","setGrid","isMousePressed","setIsMousePressed","innerHeight","startingNode","setStartingNode","endingNode","setEndingNode","isMovingStart","setIsMovingStart","isMovingEnd","setIsMovingEnd","grids","i","j","isStart","isEnd","createNode","className","id","style","width","height","border","display","justifyContent","alignItems","onMouseDown","newGrid","onMouseEnter","onMouseUp","backgroundColor","position","overflow","Button","variant","color","onClick","visitOrder","path","animateDijkstra","queue","visited","prev","result","found","visit","pre","splice","neighbours","cur","dijkstra","flexDirection","map","renderGrid","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b2ad48eb.chunk.js","sourcesContent":["import anime from 'animejs/lib/anime.es'\nimport React from 'react'\n\nexport function getNeighbours(curNode, grid) {\n\tvar neighbour = []\n\n\tif (curNode.row > 0) {\n\t\tvar node = grid[curNode.row - 1][curNode.col]\n\t\tif (!node.isWall) {\n\t\t\tneighbour.push(node)\n\t\t}\n\t}\n\tif (curNode.col < grid[0].length - 1) {\n\t\tvar node = grid[curNode.row][curNode.col + 1]\n\t\tif (!node.isWall) {\n\t\t\tneighbour.push(node)\n\t\t}\n\t}\n\tif (curNode.row < grid.length - 1) {\n\t\tvar node = grid[curNode.row + 1][curNode.col]\n\t\tif (!node.isWall) {\n\t\t\tneighbour.push(node)\n\t\t}\n\t}\n\tif (curNode.col > 0) {\n\t\tvar node = grid[curNode.row][curNode.col - 1]\n\t\tif (!node.isWall) {\n\t\t\tneighbour.push(node)\n\t\t}\n\t}\n\treturn neighbour\n}\n\nexport function dijkstra(startingNode, endingNode, grid) {\n\tvar width = grid[0].length\n\tvar queue = [startingNode]\n\tvar visited = []\n\tvar prev = []\n\tvar result = []\n\tvar found = false\n\tvar path = []\n\tfor (var i = 0; i < grid.length; i++) {\n\t\tvar visit = []\n\t\tvar pre = []\n\t\tfor (var j = 0; j < width; j++) {\n\t\t\tvisit.push(false)\n\t\t\tpre.push(-1)\n\t\t}\n\t\tvisited.push(visit)\n\t\tprev.push(pre)\n\t}\n\twhile (queue.length > 0 && !found) {\n\t\tvar node = queue[0]\n\t\tqueue.splice(0, 1)\n\t\tvisited[node.row][node.col] = true\n\t\tvar neighbours = getNeighbours(node, grid)\n\t\tfor (var i = 0; i < neighbours.length; i++) {\n\t\t\tvar neighbour = neighbours[i]\n\t\t\tif (neighbour.row === endingNode[0] && neighbour.col === endingNode[1]) {\n\t\t\t\tresult.push(neighbour)\n\t\t\t\tfound = true\n\t\t\t\tprev[neighbour.row][neighbour.col] = node\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tif (!visited[neighbour.row][neighbour.col]) {\n\t\t\t\tqueue.push(neighbour)\n\t\t\t\tvisited[neighbour.row][neighbour.col] = true\n\t\t\t\tprev[neighbour.row][neighbour.col] = node\n\t\t\t\tresult.push(neighbour)\n\t\t\t}\n\t\t}\n\t}\n\tif (found) {\n\t\tvar cur = result[result.length - 1]\n\t\tpath.push(cur)\n\t\twhile (cur != startingNode) {\n\t\t\tpath.push(cur)\n\t\t\tcur = prev[cur.row][cur.col]\n\t\t}\n\t\tpath.push(startingNode)\n\t}\n\treturn [result, path]\n}\n\nexport function animateDijkstra([visitOrder, path]) {\n\tfor (var i = 0; i <= visitOrder.length; i++) {\n\t\tif (i === visitOrder.length) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tfor (var j = path.length - 1; j >= 0; j--) {\n\t\t\t\t\tanimatePath(path[j], path.length - j)\n\t\t\t\t}\n\t\t\t}, 10 * i + 100)\n\t\t\treturn\n\t\t}\n\t\tvar node = visitOrder[i]\n\t\tanimateSearch(node, i)\n\t}\n}\n\nfunction animateSearch(node, time) {\n\tsetTimeout(() => {\n\t\tanime({\n\t\t\ttargets: document.getElementById(\"node\".concat(node.row * Math.floor(window.innerWidth / 20) + node.col)),\n\t\t\tscale: [\n\t\t\t\t{ value: 1.1, easing: 'easeOutSine', duration: 500 },\n\t\t\t\t{ value: 1, easing: 'easeInOutQuad', duration: 1200 }\n\t\t\t],\n\t\t\tbackground: [\n\t\t\t\t{ value: '#0CECDD', easing: 'linear', duration: 500 },\n\t\t\t\t{ value: '#88FFF7', easing: 'linear', duration: 500 },\n\t\t\t],\n\t\t\tborderRadius: [\n\t\t\t\t{ value: '20%', easing: 'linear', duration: 1000 },\n\t\t\t\t{ value: '0%', easing: 'linear', duration: 500 },\n\t\t\t],\n\t\t})\n\t}, 10 * time)\n}\n\nfunction animatePath(node, time) {\n\tsetTimeout(() => {\n\t\tanime({\n\t\t\ttargets: document.getElementById(\"node\".concat(node.row * Math.floor(window.innerWidth / 20) + node.col)),\n\t\t\tscale: [\n\t\t\t\t{ value: 1.1, easing: 'easeOutSine', duration: 500 },\n\t\t\t\t{ value: 1, easing: 'easeInOutQuad', duration: 1200 }\n\t\t\t],\n\t\t\tbackground: [\n\t\t\t\t{ value: '#FFD371', easing: 'linear', duration: 500 },\n\t\t\t\t{ value: '#FFF338', easing: 'linear', duration: 500 },\n\t\t\t],\n\t\t\tborderRadius: [\n\t\t\t\t{ value: '20%', easing: 'linear', duration: 1000 },\n\t\t\t\t{ value: '0%', easing: 'linear', duration: 500 },\n\t\t\t],\n\t\t})\n\t}, 50 * time)\n}\n\n\n","import './App.css';\nimport anime from 'animejs/lib/anime.es.js';\nimport React, { useState, useEffect } from 'react';\nimport { Button } from '@material-ui/core';\nimport { dijkstra, animateDijkstra } from './pathFindingFunctions';\n\nfunction App() {\n\n  const blankGrid = createGrid()\n  const [grid, setGrid] = useState(createGrid())\n  const [isMousePressed, setIsMousePressed] = useState(false)\n  const [startingNode, setStartingNode] = useState([Math.floor((window.innerHeight - 200) / 40), Math.floor(window.innerWidth / 80)])\n  const [endingNode, setEndingNode] = useState([Math.floor((window.innerHeight - 200) / 40), Math.floor(window.innerWidth * 3 / 80)])\n  const [isMovingStart, setIsMovingStart] = useState(false)\n  const [isMovingEnd, setIsMovingEnd] = useState(false)\n\n  function createGrid() {\n    var grids = []\n    for (var i = 0; i < Math.floor((window.innerHeight - 200) / 20); i++) {\n      var row = []\n      for (var j = 0; j < Math.floor(window.innerWidth / 20); j++) {\n        row.push({\n          row: i,\n          col: j,\n          isWall: false,\n          isStart: false,\n          isEnd: false\n        })\n      }\n      grids.push(row)\n    }\n    return grids\n  }\n\n  function renderGrid(grid) {\n    return (\n      <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n        {grid.map((row) => {\n          return (\n            <div style={{ display: 'flex', flexDirection: 'row' }}>\n              {row.map(node => {\n                return createNode(node)\n              })}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n\n  function createNode(node) {\n    return (\n      <div\n        className='node'\n        id={\"node\".concat(Math.floor(window.innerWidth / 20) * node.row + node.col)}\n        style={{ width: 18, height: 18, border: '1px solid #7DEDFF', display: 'flex', justifyContent: 'center', alignItems: 'center' }}\n        onMouseDown={() => {\n          if ((node.row === startingNode[0] && node.col === startingNode[1])) {\n            setIsMovingStart(true)\n            return\n          }\n          if ((node.row === endingNode[0] && node.col === endingNode[1])) {\n            setIsMovingEnd(true)\n            return\n          }\n          var newGrid = [...grid]\n          var curNode = newGrid[node.row][node.col]\n          curNode.isWall = !node.isWall\n          newGrid[node.row][node.col] = curNode\n          setGrid(newGrid)\n          setIsMousePressed(true)\n        }}\n        onMouseEnter={() => {\n          if (isMovingStart) {\n            if ((node.row === endingNode[0] && node.col === endingNode[1])) { return }\n            if (node.isWall) {\n              var newGrid = [...grid]\n              var curNode = newGrid[node.row][node.col]\n              curNode.isWall = !node.isWall\n              newGrid[node.row][node.col] = curNode\n              setGrid(newGrid)\n            }\n            setStartingNode([node.row, node.col])\n\n          }\n          if (isMovingEnd) {\n            if ((node.row === startingNode[0] && node.col === startingNode[1])) { return }\n            if (node.isWall) {\n              var newGrid = [...grid]\n              var curNode = newGrid[node.row][node.col]\n              curNode.isWall = !node.isWall\n              newGrid[node.row][node.col] = curNode\n              setGrid(newGrid)\n            }\n            setEndingNode([node.row, node.col])\n\n          }\n          if (isMousePressed) {\n            var newGrid = [...grid]\n            var curNode = newGrid[node.row][node.col]\n            curNode.isWall = !node.isWall\n            newGrid[node.row][node.col] = curNode\n            setGrid(newGrid)\n          }\n        }}\n        onMouseUp={() => {\n          if (isMovingStart) {\n            setIsMovingStart(false)\n          }\n          if (isMovingEnd) {\n            setIsMovingEnd(false)\n          }\n          if (isMousePressed) {\n            setIsMousePressed(false)\n          }\n\n        }}\n      >\n        {(node.isWall) ? (\n          <div style={{ width: 18, height: 18, backgroundColor: 'black' }} />\n        ) : (\n          <></>\n        )}\n        {(node.row === startingNode[0] && node.col === startingNode[1]) ? (\n          <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n            <div style={{ width: 18, height: 18, borderRadius: 18, backgroundColor: 'black' }} />\n            <div style={{ width: 12, height: 12, borderRadius: 12, backgroundColor: 'white', position: 'absolute' }} />\n          </div>\n        ) : (\n          <></>\n        )}\n        {(node.row === endingNode[0] && node.col === endingNode[1]) ? (\n          <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n            <div style={{ width: 18, height: 18, borderRadius: 18, backgroundColor: 'red' }} />\n            <div style={{ width: 12, height: 12, borderRadius: 12, backgroundColor: 'green', position: 'absolute' }} />\n          </div>\n        ) : (\n          <></>\n        )}\n      </div>\n    )\n  }\n\n  return (\n    <div style={{ height: window.innerHeight, overflow: 'hidden' }}>\n      <div style={{ height: 200, width: '100%', backgroundColor: 'teal' }}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          style={{ width: 100 }}\n          onClick={() => {\n            animateDijkstra(dijkstra(grid[startingNode[0]][startingNode[1]], endingNode, grid))\n          }}\n        >\n          Start\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          style={{ width: 100 }}\n          onClick={() => {\n            setGrid(blankGrid)\n            setStartingNode([Math.floor((window.innerHeight - 200) / 40), Math.floor(window.innerWidth / 80)])\n            setEndingNode([Math.floor((window.innerHeight - 200) / 40), Math.floor(window.innerWidth * 3 / 80)])\n            anime({\n              targets: '.node',\n              background: '#FFFFFF'\n            })\n          }}\n\n        >\n          Reset\n        </Button>\n      </div>\n      <div >\n        {renderGrid(grid)}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}